//By Martin de Jonge

#include <iostream>
#include <algorithm>

class Program
{
    public:
        void Start(bool StartProgram)
             {
               std::string UserInput;
               std::cin >> UserInput;
               GetUserInput(UserInput);
             }
    private:
        void Error(std::string ErrorMessage)
             {
               std::cout << ErrorMessage;
               Start(true);
             }

        void GetUserInput(std::string Input)
             {
               GetInputLength(Input);
             }

        void GetInputLength(std::string Input)
             {
               int InputLength;
               InputLength = Input.size();
               CheckLength(Input, InputLength);
             }

        void CheckLength(std::string Input, int Length)
             {
               if(Length < 8 || Length > 32) Error(Error_LengthOfPassword);
               else EncryptInput(Input, Length);
             }

        void EncryptInput(std::string Input, int Length)
             {
               std::string EncryptedPassword;
               std::cout << "Before " << Input;

               for(unsigned int i = 0; i < Input.size(); i++)
               {
                 EncryptedPassword += 3 + (Input[i] - '1') ;
               }
               std::cout << "\nAfter " << EncryptedPassword;
              }

        std::string Error_LengthOfPassword = "\nA password with a minimum of 8 and maximum of 32 characters required.\n";
};

int main()
{
    Program c_Program;
    c_Program.Start(true);
    return 0;
}
